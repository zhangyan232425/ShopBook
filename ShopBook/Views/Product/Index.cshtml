@model ReflectionIT.Mvc.Paging.PagingList<ShopBook.Models.Product>
@using ReflectionIT.Mvc.Paging
@addTagHelper *, ReflectionIT.Mvc.Paging
@{
    ViewData["Title"] = "Index";
}

<nav aria-label="eg">
    @await this.Component.InvokeAsync("Pager",new{ pagingList = this.Model})
</nav>

<h2>Index</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.SortableHeaderFor(model => model.Name, this.Model)
            </th>
            <th>
                @Html.SortableHeaderFor(model => model.Price, this.Model)
            </th>
            <th>
                @Html.SortableHeaderFor(model => model.Store, this.Model)
            </th>
            <th>
                @Html.SortableHeaderFor(model => model.ProductDate, this.Model)
            </th>
        </tr>
    </thead>


@foreach (var item in Model)
{
    <tr>
    <td>
    @Html.DisplayFor(modelItem => item.Name)
    </td>
    <td>
    @Html.DisplayFor(modelItem => item.Price)
    </td>
    <td>
    @Html.DisplayFor(modelItem => item.Store)
    </td>
    <td>
    @Html.DisplayFor(modelItem => item.ProductDate)
    </td>
    </tr>
}

</table>
<nav aria-label=" example">
    <vc:pager paging-list="@Model" />
</nav>

